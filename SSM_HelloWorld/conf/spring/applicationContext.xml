<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
<!-- Spring除过控制器不要，剩下的业务逻辑组件都要，包括dao，包括service   -->
    <context:component-scan base-package="com.lyl" >
<!--     扫描排除不写use-default-filters="false"   -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

<!-- 0.导入外部配置文件   -->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

<!-- 1.配置数据源   -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
    </bean>

<!-- 2.配置使用mybatis操作数据库   -->
<!-- 可以根据配置文件得到sqlSessionFactory   -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--     指定配置文件位置   -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
<!--     指定xml映射文件的位置   -->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
    </bean>
<!-- 我们要把每一个dao接口的实现加入到ioc容器中   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--     指定到dao接口所在的包   -->
        <property name="basePackage" value="com.lyl.dao"/>
    </bean>
<!-- 我们要把每一个dao接口的实现加入到ioc容器中;以下方式也可以   -->
<!--    <mybatis-spring:scan base-package="com.lyl.dao"/>-->

<!-- 3.配置事物控制；配置事务管理器，让它控制数据源里的链接的关闭和提交   -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!-- 4.基于xml配置，配置事物；哪些方法切入事物，还要写切入点表达式   -->
    <aop:config>
<!--    配置切入点表达式    -->
        <aop:pointcut id="txPoint" expression="execution(* com.lyl.service.*.*(..))"/>
        <aop:advisor advice-ref="myTX" pointcut-ref="txPoint"/>
    </aop:config>

<!-- 5.配置事物增强，事物属性，事物建议   -->
    <tx:advice id="myTX" transaction-manager="transactionManager">
<!--    配置事物属性    -->
        <tx:attributes>
            <tx:method name="*" rollback-for="java.lang.Exception"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
</beans>